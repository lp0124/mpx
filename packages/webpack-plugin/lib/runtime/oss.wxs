/**
 * 图片 url 追加 阿里云 oss 图片处理后缀
 * @param mpxExt
 * @param url
 * @param width number 单位为 px, 即 1 倍图下的像素值
 * @returns
 */
function s (mpxExt, url, width) {
  mpxExt = mpxExt || {}
  const { imageFormat } = mpxExt
  const { pixelRatio } = mpxExt
  const { screenWidth } = mpxExt

  const maxWidth = parseInt(screenWidth * pixelRatio, 10)

  width = width ? Math.min(parseInt(width * (screenWidth / 750) * pixelRatio, 10), maxWidth) : maxWidth

  if (!url) return // 检查 URL 是否为空

  if (url.indexOf('images.qmai.cn') === -1) return url // 检查 URL 是否为企迈图片，若不是则直接返回

  if (url.indexOf('.gif') > -1) return url // 检查 URL 是否为 GIF 图片，若是则直接返回

  if (url.indexOf('.webp') > -1) return url // 检查 URL 是否为 WebP 图片，若是则直接返回

  if (url.indexOf('.avif') > -1) return url // 检查 URL 是否为 AVIF 图片，若是则直接返回

  // 检查 URL 是否已经包含 x-oss-process 相关的处理，如果有，直接返回原 URL
  if (url.indexOf('?x-oss-process=') > -1 || url.indexOf('&x-oss-process=') > -1) return url

  // 检查 URL 是否已包含任何查询参数，以确定是使用 ? 还是 &
  const hasQuery = url.indexOf('?') > -1
  let baseRule = hasQuery ? '&x-oss-process=image' : '?x-oss-process=image'

  // eslint-disable-next-line no-restricted-globals
  if (width && !isNaN(width)) {
    // 添加图片尺寸处理参数
    baseRule += `/resize,w_${width}`
    // 添加图片锐化
    baseRule += '/sharpen,1'
  }

  if (imageFormat === 'webp' || imageFormat === 'avif') {
    baseRule += '/format,webp'
  }
  /**
   * TODO: 阿里云 OSS 支持 AVIF 格式，但图片尺寸不能超过 4,096 × 2,304 像素，否则无法打开。由于目前无法获取图片尺寸，暂时不使用 AVIF 格式。
   * 例: https://images.qmai.cn/s203683/2024/07/22/a9b44912d7d272dd93.jpg?x-oss-process=image/resize,w_1125/sharpen,1/format,avif
   */
  // else if (imageFormat === 'avif') {
  //   baseRule += '/format,avif'
  // }

  return url + baseRule
}

module.exports = {
  s
}
